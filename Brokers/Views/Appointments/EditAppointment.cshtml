@model Brokers.Models.appointments

@{
    ViewBag.Title = "EditAppointment";
}

<h2>🕗 Modifier un rendez-vous</h2>
@if (TempData["Success"] != null)
{
    <div class="success">
        <p>@TempData["Success"].ToString()</p>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.idAppointments)

    <ul>
        <li>
            @Html.LabelFor(model => model.dateHour, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.dateHour, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dateHour, "", new { @class = "text-danger" })
        </li>
        <li>
            @Html.LabelFor(model => model.subject, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.subject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.subject, "", new { @class = "text-danger" })
        </li>
        <li>
            @Html.LabelFor(model => model.idCustomers, "Client", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("idCustomers", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idCustomers, "", new { @class = "text-danger" })
        </li>
        <li>
            @Html.LabelFor(model => model.idBroker, "Courtier", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("idBroker", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idBroker, "", new { @class = "text-danger" })
        </li>
        <li>
            <input type="submit" value="sauvegarder les modifications" class="btnsubmit" />
        </li>
    </ul>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>
